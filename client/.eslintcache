[{"/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/index.js":"1","/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/App.js":"2","/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/pages/Home.js":"3","/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/components/Navigation/Navigation.js":"4","/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/pages/Login.js":"5","/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/pages/Post.js":"6","/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/pages/Admin.js":"7"},{"size":198,"mtime":1610807100478,"results":"8","hashOfConfig":"9"},{"size":612,"mtime":1611331150982,"results":"10","hashOfConfig":"9"},{"size":2256,"mtime":1611327939485,"results":"11","hashOfConfig":"9"},{"size":2703,"mtime":1610880696333,"results":"12","hashOfConfig":"9"},{"size":3900,"mtime":1611337995500,"results":"13","hashOfConfig":"9"},{"size":1138,"mtime":1611270411731,"results":"14","hashOfConfig":"9"},{"size":104,"mtime":1611331085014,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1y1badi",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/index.js",[],["33","34"],"/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/App.js",[],"/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/pages/Home.js",["35","36","37"],"import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TruncateString from 'react-truncate-string'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    postBox: {\n        paddingTop: 15,\n        paddingBottom: 15,\n    },\n    postImage: {\n        margin: 'auto',\n        display: 'block'\n    },\n    postTitle: {\n        color: 'inherit',\n        textDecoration: 'none',\n    },\n}));\n\nexport default function Home() {\n    const classes = useStyles();\n    const [posts, setPosts] = useState([]);\n    \n    useEffect(() => {\n        axios.get('http://localhost:8888/posts')\n            .then(response => {\n                console.log(response);\n                setPosts(response.data);\n            })\n            .catch(err =>{\n                console.log(err);\n            })\n    }, [])\n\n    return (\n        <Container style={{marginTop: 100, maxWidth: 1000}}>\n            {posts.map(post =>(\n                <Link to={{pathname: `post/${post.slug}`}} style={{color: 'inherit', textDecoration: 'none'}}>\n                    <Grid container spacing={5} direction=\"row\" className={classes.postBox}>\n                        <Grid item>\n                            <img src=\"https://via.placeholder.com/350x200\" />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container direction=\"row\">\n                                <h1>{post.title}</h1>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Link>\n            ))}\n        </Container>\n    );\n}\n\n/*\n<div key={post.id}>\n                    <Link to={{\n                        pathname: `post/${post.slug}`\n                    }} style={{color: 'inherit', textDecoration: 'none'}}>\n                        <h1>{post.title}</h1>\n                    </Link>\n                    <h3>{post.subtitle}</h3>\n                    <TruncateString text={post.content} truncateAt={100} />\n                </div>\n                */","/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/components/Navigation/Navigation.js",[],"/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/pages/Login.js",["38"],"/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/pages/Post.js",["39","40","41"],"import React, {useState, useEffect} from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\n\nconst useStyes = makeStyles((theme) => ({\n    postText: {\n        fontSize: 20,\n    },\n}));\n\n\nexport default function Post(props){\n\n    const classes = useStyes();\n\n    const [data, setData] = useState([]);\n    const [comments, setComments] = useState([]);\n\n    useEffect(() => {\n        console.log(props.match.params.slug);\n        //post\n        axios.get(`http://localhost:8888/posts/${props.match.params.slug}`)\n            .then(response => {\n                setData(response.data.post);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n    return (\n        <Container>\n            <Container style={{marginTop: 100, maxWidth: 800}}>\n                <div>\n                    <h1>{data.title}</h1>\n                    <h3>{data.subtitle}</h3>\n                    <p className={classes.postText}>{data.content}</p>\n                </div>\n            </Container>\n        </Container>\n    );\n}","/home/hyperxpizza/programowanie/fullstack/kernel-panic-blog/client/src/pages/Admin.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":22},{"ruleId":"46","severity":1,"message":"50","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":46,"column":29,"nodeType":"53","endLine":46,"endColumn":78},{"ruleId":"46","severity":1,"message":"54","line":2,"column":11,"nodeType":"48","messageId":"49","endLine":2,"endColumn":19},{"ruleId":"46","severity":1,"message":"55","line":18,"column":12,"nodeType":"48","messageId":"49","endLine":18,"endColumn":20},{"ruleId":"46","severity":1,"message":"56","line":18,"column":22,"nodeType":"48","messageId":"49","endLine":18,"endColumn":33},{"ruleId":"57","severity":1,"message":"58","line":30,"column":8,"nodeType":"59","endLine":30,"endColumn":10,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'TruncateString' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'comments' is assigned a value but never used.","'setComments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.slug'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [props.match.params.slug]",{"range":"66","text":"67"},[779,781],"[props.match.params.slug]"]